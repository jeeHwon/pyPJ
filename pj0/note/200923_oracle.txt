<Oracle> 200923

==jusorok table 생성
select * from tab;
create table jusorok(
	no number(3),
	irum varchar2(30),
	tel varchar2(20)
	);
desc jusorok;	

--컬럼 추가
alter table jusorok
	add (addr varchar2(50));
desc jusorok;

--컬럼명 변경
alter table jusorok
	rename column tel to hp;
desc jusorok;	

--컬럼 길이변경
alter table jusorok
	modify (addr varchar2(100));
	
--컬럼 추가
alter table jusorok
	add (email varchar2(50));
desc jusorok;

--컬럼 삭제
alter table jusorok
	drop column addr;

--테이블명 변경
rename jusorok to member;
select * from tab;
desc member;

--테이블 삭제
drop table member;
drop table t1;
drop table t2;
drop table t3;

--휴지통 비우기
purge recyclebin;

--테이블 생성 및 제약조건
conn tom/jerry
create table hobby(
	hno number, --취미번호
	hname varchar2(30) --취미이름
	);
select * from tab;
insert into hobby values(10,'농구');
insert into hobby values(10,'배구');
insert into hobby (hname) values ('축구');

==제약사항
primary key : 중복불가 + 필수입력
unique    	: 중복불가 only
not null 	: 필수입력 only
check 		: 지정된 값만 등록
foreign key : 다른테이블의 데이터를 참조

	
drop table hobby;

==제약사항 적용해서 테이블 만들기
create table 테이블명 (
	컬럼명1, 데이터형 [제약사항1],
	컬럼명2, 데이터형 [제약사항2], ..
	);
	
create table hobby(
	hno number primary key,
	hname varchar2(30)
	);
insert into hobby values(10,'농구');
insert into hobby values(10,'배구');
insert into hobby (hname) values ('축구');

alter table hobby
	add (manager varchar2(20) unique);

alter table hobby
	add (loc varchar2(20) not null); --기존데이터에 어긋나서 error
	
insert into hobby values (20, '배구', null);
insert into hobby values (30, '축구', '축구장');
insert into hobby values (40, '족구', '축구장'); --unique는 중복허용안함 error

create table sawon(
	sno number(2) primary key,
	sname varchar2(30) not null,
	gender varchar2(10) check gender in ('남', '여'),
	timesal number check timesal > 8950,
	hno number);

insert into sawon (sno, sname) values (1, '둘리');
insert into sawon (sno, sname, gender) values (2, '고길동','남');
insert into sawon (sno, sname, gender,timesal) 
	values (3, '희동이','여',9000);
insert into sawon values(
	4, '호날두', '남', 8960, 30);
insert into sawon values(
	5, '조단', '남', 9100, 10);
delete hobby where hno=10;
drop table hobby;
drop table sawon;

==다시시작
create table hobby(
	hno number primary key,
	hname varchar2(30) not null,
	manager varchar2(30) unique);
create table sawon(
	sno number primary key,
	sname varchar2(30) not null,
	sal number check (sal>1000),
	city varchar2(10) default '서울',
	hp varchar2(20) unique,
	hno number(2) references hobby (hno) );
	
insert into hobby values(10, '등산', '김등산');
insert into hobby values(20, '낚시', '이낚시');
insert into hobby values(30, '헬스', '박헬창');

insert into sawon (sno, sname, sal, hno)
	values (1, '김사원', 2000, 10);
insert into sawon (sno, sname, sal, hno)
	values (2, '이사원', 3000, 20);
insert into sawon values
	(3, '최사원', 3500, '마산', '01012345678', 30);
insert into sawon values
	(4, '제갈사원', 4000, '춘천', '01045671230', 50);

delete hobby where hno=20; --foreign key 걸려 있어 child record 있을 땐 불가
drop table hobby; --따라서 drop 할때도 child table 부터 삭제해야만
drop table sawon; --parent table 삭제 가능

==제약사항에서 제약명 주기
create table 테이블명 (
	컬럼명1 테이터형 [[constraint 제약명] 제약사항1],
	컬럼명2 테이터형 [[constraint 제약명] 제약사항2]...);
	
--제약명 : 테이블명_컬럼명_제약종류(p, u, n, f, c)
create table hobby (
		hno number(20) constraint hobby_hno_p primary key,
		hname varchar2(30) constraint hobby_hname_n not null,
		mgr varchar2(30)
		);
insert into hobby values (10, '농구', '이농구');
insert into hobby values (10, '배구', '김배구'); ->오류메시지 잘뜨네
insert into hobby values (20, '배구', '김배구');
		

create table sawon (
		sno number(20) primary key,
		sname varchar2(30) constraint sawon_sname_n not null,
		hp varchar2(20) constraint sawon_hp_u unique,
		sal number constraint sawon_sal_c check (sal > 1000),
		city varchar2(10) default '대전',
		hno number(20) constraint sawon_hno_f references hobby(hno)
		);

--현재 사용자의 제약사항 조회
select table_name from dictionary
	where table_name like '%CONSTRAINTS%';
desc USER_CONSTRAINTS
select CONSTRAINT_NAME, CONSTRAINT_TYPE, SEARCH_CONDITION
	from user_constraints;

--제약 삭제
alter table sawon
	drop constraint sawon_sal_c;
alter table sawon 
	drop constraint SAWON_HNO_F;
alter table sawon	
	drop constraint SYS_C007037;

alter table hobby
	drop primary key;
	
drop table sawon;
drop table hobby;

==컬럼 레벨 제약 (컬럼에다가 제약을 주는 것)
create table hobby(
	hno number,
	hname varchar2(30),
	mgr varchar2(30),
	constraint hobby_hno_p primary key (hno),
	constraint hobby_hname_u unique (hname)
	);

--not null은 컬럼레벨만 가능 즉, 컬럼 바로 옆에 적어줘야해
create table sawon(
	sno number,
	sname varchar2(30) constraint sawon_sname_n not null,
	sal number,
	city varchar2(10) default '강릉',
	hp varchar2(20),
	hno number,
	constraint sawon_sno_p primary key(sno),
	constraint sawon_sal_c check(sal>1000),
	constraint sawon_hno_f foreign key (hno) 
		references hobby(hno)
	);

--컬럼 레벨로 361page 1번
create table dept2(
	depno varchar2(6) constraint dept2_dptno_p primary key,
	dname varchar2(30)
	);

create table tcons(
	no number(5) constraint tcons_no_pk primary key,
	name varchar2(20) constraint tcons_name_nn not null,
	jumin varchar2(13) constraint tcons_jumin_nn not null,
	area number(1) constraint tcons_area_ck check(area>=1 and area<=4),
	deptno varchar2(6) constraint tcons_deptno_fk references dept2(depno),
	constraint tcons_jumin_uk unique (jumin)
	);
	
--if unique 제약 추가시
alter table tcons
	add constraint tcons_jumin_uk unique (jumin);
제약 수정 불가 따라서 지우고 다시 해야해
중복된 데이터가 있는데 유니크 제약도 추가로 줄 순 없어

--복합키 (혼자서 primary key 가 될수 없을때/ 컬럼레벨로 줄수 없어 테이블레벨로)
--계산 필요 없을 땐 꼭 number 안주고 varchar2로 줘도돼
create table student(
	grade varchar2(2),
	ban varchar2(2),
	bunho varchar2(2),
	irum varchar2(20),
	hp varchar2(20),
	constraint student_grade_ban_bunho_p 
		primary key(grade,ban,bunho));
		
insert into student values('1', '1', '1', '김일번', '010');
insert into student values('1', '1', '2', '장이번', '011');
insert into student values('1', '1', '3', '최삼번', '012');
insert into student values('1', '1', '4', '도사번', '013');
insert into student values('2', '1', '1', '이첫째', '010');
insert into student values('2', '1', '2', '이둘째', '011');
insert into student values('2', '1', '3', '이셋째', '012');
insert into student values('2', '1', '4', '이넷째', '013');

insert into student values('1', '1', '3', '오류임', '013'); -- error

--DML, 테이블 스페이스, 테이블 생성

==과제
1.영구테이블 스페이스 september 생성 -데이터 파일 september01.DBF (10M)
create tablespace 테이블스페이스명
	datafile '경로 및 파일명' size 크기 ['경로 및 파일명2' size 크기..]
create tablespace september
	datafile 'D:\study\db\september01.dbf' size 10M;

2.september에 데이터 파일 추가 -데이터 파일 september02.DBF (10M)
자동확장모드 100KB단위,최대 50M
alter tablespace september
	add datafile 'D:\study\db\september02.dbf' size 10M;

alter database
	datafile 'D:\study\db\september02.dbf' 
	autoextend on next 100kb maxsize 50M;


3.데이터닉션너리에서 정보를 표시


4.september테이블 스페이스를 d:\down소로 이동

1)테이블스페이스 상태변경
alter tablespace september offline;
2)데이터파일 이동 : 걍 탐색기에서 이동하기
3)데이터파일 위치 정보 변경(오라클내에서 이동한거 인식 못하니까 알려주자)
alter tablespace september
	rename datafile 'D:\study\db\september02.dbf' 
	to 'D:\down\september02.dbf';
4)테이블스페이스 다시 상태변경
alter tablespace september online;

select TABLESPACE_NAME, FILE_NAME, BYTES from dba_data_files
	order by TABLESPACE_NAME;


5.사용자 keyboard/mouse 생성하여 권한부여, 기본테이블스페이스 september
create user keyboard
	identified by mouse
	default tablespace september;
	
grant connect, resource to keyboard;


6.september 테이블 스페이스에 data.txt 수행
@D:\study\oracle\data.txt


7.septemberG 테이블 스페이스및 연관된 파일 삭제후 결과 확인
conn system/1q2w3e4r!

drop tablespace september
	including contents and datafiles;



--DML, 테이블 생성 




	

	
	

	


	


















